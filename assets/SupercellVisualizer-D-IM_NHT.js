import{r as u,j as e}from"./index-C7drGchA.js";const S=({initialGrid:h=[[200,577,626,345],[43,79,375,63],[198,10,29,228]]})=>{const[a,g]=u.useState(h),[c,p]=u.useState([]),[b,i]=u.useState(!1),f=()=>{const t=[],l=a.length,n=a[0].length;for(let s=0;s<l;s++)for(let r=0;r<n;r++){const m=a[s][r];let d=!0;const x=[{row:s-1,col:r},{row:s+1,col:r},{row:s,col:r-1},{row:s,col:r+1},{row:s-1,col:r-1},{row:s-1,col:r+1},{row:s+1,col:r-1},{row:s+1,col:r+1}];for(const o of x)if(o.row>=0&&o.row<l&&o.col>=0&&o.col<n&&a[o.row][o.col]>=m){d=!1;break}x.filter(o=>o.row>=0&&o.row<l&&o.col>=0&&o.col<n).length<2&&(d=!1),d&&t.push({row:s,col:r,value:m})}p(t),i(!0)},j=(t,l,n)=>{const s=[...a];s[t][l]=parseInt(n)||0,g(s),i(!1)},w=()=>{g(h),p([]),i(!1)},N=(t,l)=>c.some(n=>n.row===t&&n.col===l);return e.jsxs("div",{className:"bg-white rounded-lg border p-6 space-y-6",children:[e.jsxs("div",{className:"text-center",children:[e.jsx("h3",{className:"text-xl font-semibold mb-2",children:"🔍 Supercell Puzzle"}),e.jsx("p",{className:"text-gray-600",children:"Find numbers that are greater than all their neighbors!"})]}),e.jsxs("div",{className:"space-y-4",children:[e.jsx("div",{className:"text-center",children:e.jsx("p",{className:"text-sm text-gray-600 mb-4",children:"A supercell is a number that is greater than all its neighboring numbers (up, down, left, right)."})}),e.jsx("div",{className:"flex justify-center",children:e.jsx("div",{className:"grid gap-1 p-4 bg-gray-100 rounded-lg",children:a.map((t,l)=>e.jsx("div",{className:"flex gap-1",children:t.map((n,s)=>e.jsx("div",{className:`w-16 h-16 border-2 rounded-lg flex items-center justify-center ${N(l,s)?"bg-green-200 border-green-500":"bg-white border-gray-300"}`,children:e.jsx("input",{type:"number",value:n,onChange:r=>j(l,s,r.target.value),className:"w-full h-full text-center text-sm font-semibold bg-transparent border-none focus:outline-none"})},`${l}-${s}`))},l))})}),e.jsxs("div",{className:"flex gap-3 justify-center",children:[e.jsx("button",{onClick:f,className:"px-6 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg",children:"Find Supercells"}),e.jsx("button",{onClick:w,className:"px-6 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-lg",children:"Reset Grid"})]})]}),b&&e.jsxs("div",{className:"bg-gray-50 rounded-lg p-4",children:[e.jsx("h4",{className:"font-semibold mb-3 text-center",children:c.length>0?`Found ${c.length} Supercell(s)!`:"No Supercells Found"}),c.length>0&&e.jsx("div",{className:"space-y-2",children:c.map((t,l)=>e.jsxs("div",{className:"text-sm bg-white p-2 rounded border",children:[e.jsxs("span",{className:"font-semibold",children:["Supercell ",l+1,":"]}),"Value ",e.jsx("span",{className:"font-mono font-bold",children:t.value})," at position (",t.row+1,", ",t.col+1,")"]},l))})]}),e.jsx("div",{className:"text-center text-sm text-gray-600 bg-blue-50 p-3 rounded-lg",children:e.jsxs("p",{children:["💡 ",e.jsx("strong",{children:"Tip:"})," Try creating a grid where the largest numbers are surrounded by smaller ones!"]})})]})};export{S as default};
